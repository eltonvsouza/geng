package br.com.model;

// Generated 26/10/2012 15:13:15 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * Ocorrencia generated by hbm2java
 */
@Entity
@Table(name = "ocorrencia", catalog = "geng")
public class Ocorrencia implements java.io.Serializable {

	private Integer codigo;
	private Unidade unidade;
	private String descricao;
	private Set<Trabalhador> trabalhadors = new HashSet<Trabalhador>(0);

	public Ocorrencia() {
	}

	public Ocorrencia(Unidade unidade, String descricao) {
		this.unidade = unidade;
		this.descricao = descricao;
	}

	public Ocorrencia(Unidade unidade, String descricao,
			Set<Trabalhador> trabalhadors) {
		this.unidade = unidade;
		this.descricao = descricao;
		this.trabalhadors = trabalhadors;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "codigo", unique = true, nullable = false)
	public Integer getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	@NotNull(message="Campo Unidade: Obrigatório")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "unidade", nullable = false)
	public Unidade getUnidade() {
		return this.unidade;
	}

	public void setUnidade(Unidade unidade) {
		this.unidade = unidade;
	}

	@NotEmpty(message="Campo Descrição: Obrigatório")
	@Length(min=5, max=200, message="Campo Descrição: Tamanho mínimo de 5 caracteres")
	@Column(name = "descricao", nullable = false, length = 200)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ocorrencia")
	public Set<Trabalhador> getTrabalhadors() {
		return this.trabalhadors;
	}

	public void setTrabalhadors(Set<Trabalhador> trabalhadors) {
		this.trabalhadors = trabalhadors;
	}

}
