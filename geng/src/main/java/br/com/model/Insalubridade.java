package br.com.model;

// Generated 26/10/2012 15:13:15 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.LazyToOne;
import org.hibernate.annotations.LazyToOneOption;
import org.hibernate.validator.constraints.Range;

/**
 * Insalubridade generated by hbm2java
 */
@Entity
@Table(name = "insalubridade", catalog = "geng", uniqueConstraints = @UniqueConstraint(columnNames = {
		"unidade", "servico" }))
public class Insalubridade implements java.io.Serializable {

	private Integer codigo;
	private Servico servico;
	private Unidade unidade;
	private Integer porcentagem;

	public Insalubridade() {
	}

	public Insalubridade(Servico servico, Unidade unidade, Integer porcentagem) {
		this.servico = servico;
		this.unidade = unidade;
		this.porcentagem = porcentagem;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "codigo", unique = true, nullable = false)
	public Integer getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	@NotNull(message="Campo Serviço: Obrigatório")
	@LazyToOne(LazyToOneOption.FALSE)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "servico", nullable = false)
	public Servico getServico() {
		return this.servico;
	}

	public void setServico(Servico servico) {
		this.servico = servico;
	}

	@NotNull(message="Campo Unidade: Obrigatório")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "unidade", nullable = false)
	public Unidade getUnidade() {
		return this.unidade;
	}

	public void setUnidade(Unidade unidade) {
		this.unidade = unidade;
	}

	@NotNull(message="Campo Porcentagem: Obrigatório")
	@Range(min=1, max=100, message="Campo Porcentagem: Obrigatório valores entre 1 e 100")
	@Column(name = "porcentagem", nullable = false)
	public Integer getPorcentagem() {
		return this.porcentagem;
	}

	public void setPorcentagem(Integer porcentagem) {
		this.porcentagem = porcentagem;
	}

}
