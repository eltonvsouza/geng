package br.com.model;

// Generated 26/10/2012 15:13:15 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Past;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * Trabalhador generated by hbm2java
 */
@Entity
@Table(name = "trabalhador", catalog = "geng", uniqueConstraints = @UniqueConstraint(columnNames = {
		"unidade", "matricula" }))
public class Trabalhador implements java.io.Serializable {

	private Integer matricula;
	private Ocorrencia ocorrencia;
	private Empresa empresa;
	private Funcao funcao;
	private Unidade unidade;
	private String nome;
	private String mae;
	private String pis;
	private String cpf;
	private String rg;
	private String sexo;
	private String ecivil;
	private String email;
	private String pais;
	private String cidade;
	private String bairro;
	private String logradouro;
	private Integer numero;
	private Integer uf;
	private String cep;
	private String complemento;
	private String cbo;
	private String ctps;
	private String serie;
	private BigDecimal salario;
	private boolean csindical;
	private Date datanascimento;
	private Date dataadmissao;
	private Date dataopcao;
	private Date datademissao;
	private Date datamudancacontrato;
	private Set<Diario> diarios = new HashSet<Diario>(0);
	private Set<Recibo> recibos = new HashSet<Recibo>(0);
	private Set<Filho> filhos = new HashSet<Filho>(0);

	public Trabalhador() {
	}

	public Trabalhador(Integer matricula, Ocorrencia ocorrencia, Empresa empresa,
			Funcao funcao, Unidade unidade, String nome, String mae,
			BigDecimal salario, boolean csindical) {
		this.matricula = matricula;
		this.ocorrencia = ocorrencia;
		this.empresa = empresa;
		this.funcao = funcao;
		this.unidade = unidade;
		this.nome = nome;
		this.mae = mae;
		this.salario = salario;
		this.csindical = csindical;
	}

	public Trabalhador(Integer matricula, Ocorrencia ocorrencia, Empresa empresa,
			Funcao funcao, Unidade unidade, String nome, String mae,
			String pis, String cpf, String rg, String sexo, String ecivil,
			String email, String pais, String cidade, String bairro,
			String logradouro, Integer numero, Integer uf, String cep,
			String complemento, String cbo, String ctps, String serie,
			BigDecimal salario, boolean csindical, Date datanascimento,
			Date dataadmissao, Date dataopcao, Date datademissao,
			Date datamudancacontrato, Set<Diario> diarios, Set<Recibo> recibos,
			Set<Filho> filhos) {
		this.matricula = matricula;
		this.ocorrencia = ocorrencia;
		this.empresa = empresa;
		this.funcao = funcao;
		this.unidade = unidade;
		this.nome = nome;
		this.mae = mae;
		this.pis = pis;
		this.cpf = cpf;
		this.rg = rg;
		this.sexo = sexo;
		this.ecivil = ecivil;
		this.email = email;
		this.pais = pais;
		this.cidade = cidade;
		this.bairro = bairro;
		this.logradouro = logradouro;
		this.numero = numero;
		this.uf = uf;
		this.cep = cep;
		this.complemento = complemento;
		this.cbo = cbo;
		this.ctps = ctps;
		this.serie = serie;
		this.salario = salario;
		this.csindical = csindical;
		this.datanascimento = datanascimento;
		this.dataadmissao = dataadmissao;
		this.dataopcao = dataopcao;
		this.datademissao = datademissao;
		this.datamudancacontrato = datamudancacontrato;
		this.diarios = diarios;
		this.recibos = recibos;
		this.filhos = filhos;
	}

	@NotNull(message="Campo Matrícula: Obrigatório")
	@Id
	@Column(name = "matricula", unique = true, nullable = false)
	public Integer getMatricula() {
		return this.matricula;
	}

	public void setMatricula(Integer matricula) {
		this.matricula = matricula;
	}

	@NotNull(message="Campo Ocorrência: Obrigatório")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ocorrencia", nullable = false)
	public Ocorrencia getOcorrencia() {
		return this.ocorrencia;
	}

	public void setOcorrencia(Ocorrencia ocorrencia) {
		this.ocorrencia = ocorrencia;
	}

	@NotNull(message="Campo Empresa: Obrigatório")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "empresa", nullable = false)
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "funcao", nullable = false)
	public Funcao getFuncao() {
		return this.funcao;
	}

	public void setFuncao(Funcao funcao) {
		this.funcao = funcao;
	}

	@NotNull(message="Campo Unidade: Obrigatório")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "unidade", nullable = false)
	public Unidade getUnidade() {
		return this.unidade;
	}

	public void setUnidade(Unidade unidade) {
		this.unidade = unidade;
	}

	@NotEmpty(message="Campo Nome: Obrigatório")
	@Length(min=3, max=200, message="Campo Nome: Tamanho mínimo de 3 caracteres")
	@Column(name = "nome", nullable = false, length = 200)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@NotEmpty(message="Campo Mãe: Obrigatório")
	@Length(min=3, max=200, message="Campo Mãe: Tamanho mínimo de 3 caracteres")
	@Column(name = "mae", nullable = false, length = 200)
	public String getMae() {
		return this.mae;
	}

	public void setMae(String mae) {
		this.mae = mae;
	}

	@Column(name = "pis", length = 11)
	public String getPis() {
		return this.pis;
	}

	public void setPis(String pis) {
		this.pis = pis;
	}

	@Column(name = "cpf", length = 14)
	public String getCpf() {
		return this.cpf;
	}

	public void setCpf(String cpf) {
		this.cpf = cpf;
	}

	@Column(name = "rg", length = 10)
	public String getRg() {
		return this.rg;
	}

	public void setRg(String rg) {
		this.rg = rg;
	}

	@Column(name = "sexo", length = 1)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	@Column(name = "ecivil", length = 3)
	public String getEcivil() {
		return this.ecivil;
	}

	public void setEcivil(String ecivil) {
		this.ecivil = ecivil;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "pais", length = 50)
	public String getPais() {
		return this.pais;
	}

	public void setPais(String pais) {
		this.pais = pais;
	}

	@Column(name = "cidade", length = 100)
	public String getCidade() {
		return this.cidade;
	}

	public void setCidade(String cidade) {
		this.cidade = cidade;
	}

	@Column(name = "bairro", length = 100)
	public String getBairro() {
		return this.bairro;
	}

	public void setBairro(String bairro) {
		this.bairro = bairro;
	}

	@Column(name = "logradouro", length = 100)
	public String getLogradouro() {
		return this.logradouro;
	}

	public void setLogradouro(String logradouro) {
		this.logradouro = logradouro;
	}

	@Column(name = "numero")
	public Integer getNumero() {
		return this.numero;
	}

	public void setNumero(Integer numero) {
		this.numero = numero;
	}

	@Column(name = "uf")
	public Integer getUf() {
		return this.uf;
	}

	public void setUf(Integer uf) {
		this.uf = uf;
	}

	@Column(name = "cep", length = 11)
	public String getCep() {
		return this.cep;
	}

	public void setCep(String cep) {
		this.cep = cep;
	}

	@Column(name = "complemento", length = 100)
	public String getComplemento() {
		return this.complemento;
	}

	public void setComplemento(String complemento) {
		this.complemento = complemento;
	}

	@Column(name = "cbo", length = 9)
	public String getCbo() {
		return this.cbo;
	}

	public void setCbo(String cbo) {
		this.cbo = cbo;
	}

	@Column(name = "ctps", length = 7)
	public String getCtps() {
		return this.ctps;
	}

	public void setCtps(String ctps) {
		this.ctps = ctps;
	}

	@Column(name = "serie", length = 5)
	public String getSerie() {
		return this.serie;
	}

	public void setSerie(String serie) {
		this.serie = serie;
	}

	@Column(name = "salario", nullable = false, precision = 7)
	public BigDecimal getSalario() {
		return this.salario;
	}

	public void setSalario(BigDecimal salario) {
		this.salario = salario;
	}

	@Column(name = "csindical", nullable = false)
	public boolean isCsindical() {
		return this.csindical;
	}

	public void setCsindical(boolean csindical) {
		this.csindical = csindical;
	}

	@Past(message="Campo Data de Nascimento: Impossível cadastrar datas futuras")
	@Temporal(TemporalType.DATE)
	@Column(name = "datanascimento", length = 10)
	public Date getDatanascimento() {
		return this.datanascimento;
	}

	public void setDatanascimento(Date datanascimento) {
		this.datanascimento = datanascimento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataadmissao", length = 10)
	public Date getDataadmissao() {
		return this.dataadmissao;
	}

	public void setDataadmissao(Date dataadmissao) {
		this.dataadmissao = dataadmissao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataopcao", length = 10)
	public Date getDataopcao() {
		return this.dataopcao;
	}

	public void setDataopcao(Date dataopcao) {
		this.dataopcao = dataopcao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datademissao", length = 10)
	public Date getDatademissao() {
		return this.datademissao;
	}

	public void setDatademissao(Date datademissao) {
		this.datademissao = datademissao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datamudancacontrato", length = 10)
	public Date getDatamudancacontrato() {
		return this.datamudancacontrato;
	}

	public void setDatamudancacontrato(Date datamudancacontrato) {
		this.datamudancacontrato = datamudancacontrato;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "trabalhador")
	public Set<Diario> getDiarios() {
		return this.diarios;
	}

	public void setDiarios(Set<Diario> diarios) {
		this.diarios = diarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "trabalhador")
	public Set<Recibo> getRecibos() {
		return this.recibos;
	}

	public void setRecibos(Set<Recibo> recibos) {
		this.recibos = recibos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "trabalhador")
	public Set<Filho> getFilhos() {
		return this.filhos;
	}

	public void setFilhos(Set<Filho> filhos) {
		this.filhos = filhos;
	}

}
